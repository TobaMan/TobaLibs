
/* 

	Copyright (c) 2024 Damien Culot. All rights reserved.
	
	This work is licensed under the terms of the MIT license.  
	For a copy, see <https://opensource.org/licenses/MIT>.

 */

/*Specify which optimization level to use:
		-O0 Means “no optimization”: this level compiles the fastest and generates the most debuggable code.
		-O1 Somewhere between -O0 and -O2.
		-O2 Moderate level of optimization which enables most optimizations.
		-O3 Like -O2, except that it enables optimizations that take longer to perform or that may generate larger code (in an attempt to make the program run faster).
		-Ofast Enables all the optimizations from -O3 along with other aggressive optimizations that may violate strict compliance with language standards.
		-Os Like -O2 with extra optimizations to reduce code size.
		-Oz Like -Os (and thus -O2), but reduces code size further.
		-Og Like -O1. In future versions, this option might disable different optimizations in order to improve debuggability.
		-O Equivalent to -O1.

		opts = ("O0", "O1", "O2", "O3", "Ofast", "Os", "Oz", "Og", "O", "O4")
*/


import:libcompiler/compiler

enum:_module_{
	_name_ = "compiler_clang";
	_version_ = [1, 0, 0];
	_date_ = [1, 5, 24];
	_author = "damien culot"
}

obj:Clang(){

	cpl = compiler::Compiler()
	cpl._compiler = fspath(1)$"libcompiler/Compilers/llvm-mingw_x86_64/bin/clang.exe"
	self.cpl = cpl
	

	func:SetSourceFile(self, file){
		self.cpl.SetSourceFile(file)}

	func:SetName(self, name){
		self.cpl.SetName(name)}

	func:SetPath(self, fpath){
		self.cpl.SetPath(fpath)}

	func:Set32bits(self){
		self.cpl.Set32bits()}

	func:Set64bits(self){
		self.cpl.Set64bits()}

	func:SetO0(self){
		self.cpl.SetO0()}

	func:SetO1(self){
		self.cpl.SetO1()}

	func:SetO2(self){
		self.cpl.SetO2()}

	func:SetO3(self){
		self.cpl.SetO3()}

	func:SetFast(self){
		self.cpl._optimization = "-Ofast"}

	func:SetOpenmp(self){
		self.cpl.SetOpenmp()}

	func:SetDebugMode(self){
		self.cpl.SetDebugMode()}

	func:ShowAllWarnings(self){
		self.cpl.ShowAllWarnings()}
	
	func:ShowExtraWarnings(self){
		self.cpl.ShowExtraWarnings()}

	func:ShowCommandLine(self){
		self.cpl.ShowCommandLine()}

	func:BuildExe(self){
		self.cpl.BuildExe()}

	func:BuildSharedLib(self){
		self.cpl.BuildSharedLib()}

	func:ExecFromString(self, string){
		self.cpl.ExecFromString(string)}

	func:Timing(self, code){
		self.cpl.Timing(code)}

}



if(main()){

	cl = Clang()
	cl.SetSourceFile("examples/test.c")
	cl.Set64bits()
	cl.SetFast()
	cl.BuildExe()
}